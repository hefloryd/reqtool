@GenModel(editDirectory="/com.rtlabs.reqtool.model.edit/src-gen", fileExtensions="spec")
package com.rtlabs.reqtool.model.requirements

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.common.util.DiagnosticChain
import org.eclipse.emf.common.util.BasicDiagnostic
import java.util.Map

type DiagnosticChain wraps DiagnosticChain
type Map wraps Map<?,?>
type BasicDiagnostic wraps BasicDiagnostic

type LocalDate wraps java.time.LocalDate


enum Priority {
	LOWEST
	LOW
	HIGH
	HIGHEST
}

enum State {
	NEW
	ACCEPTED
	IMPLEMENTING
	IMPLEMENTED
	TESTING
	TESTED_PASS
	TESTED_FAIL
	COMPLETE
}


@GenModel(labelFeature="fullName")
class Person {
	String firstName
	String lastName
	String company
	String email

	derived String fullName get {
		firstName + " " + lastName
	}
}

class Traceable {
	refers EObject[] parents
	refers EObject[] children

	derived int numberOfParents get {
		return parents.size();
	}	

	derived int numberOfChildren get {
		return children.size();
	}
}


class Requirement extends Traceable {
	int identifier
	String body
	Priority priority
	State state
	LocalDate created
	LocalDate modified

	@GenModel(property="Editable") // Triggers description generation
	contains Person owner
	
	
	RequirementType ^type
	
	container Specification specification opposite requirements
	
	derived String name get {
		return "R" + identifier
	}

	op String toString() {
		return name
	}
}


enum RequirementType {
	FREE_STYLE as "Free Style",
	GHERKIN as "Gherkin",
	USER_STORY as "User Story"
}

class Artifact extends Traceable {
	String name
	String uri
	String artifactHandler
	container ArtifactContainer parent opposite artifacts
	
	op String toString() {
		return name + ": " + uri
	}	
}


class ArtifactContainer {
	contains Artifact[] artifacts opposite parent
}

class Specification {
	String title = ""
	@GenModel(propertyMultiLine="true")
	String description = ""

	@GenModel(property="Editable") // Triggers description generation
	contains Requirement[] requirements opposite specification
	contains ArtifactContainer artifactContainer
	
    @GenModel(propertyDescription="-")
	String documentPrefixFile = ""
    @GenModel(propertyDescription="-")
	String documentSuffixFile = ""

	int nextIdentifier
	op Requirement createNewRequirement()
	
    op boolean validateObject(DiagnosticChain chain, Map context) {
        return com.rtlabs.reqtool.model.requirements.SpecificationValidation.validate(this, chain, context)
    }
}
